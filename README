This is a project I have done at the Hebrew University of Jerusalem with Mor Moshe as a part of a course
called "From Nand to Tetris", you can read more about the course here: https://www.nand2tetris.org/
In this course we were required to build a computer from Nand gates and Flip-Flops using simulators.
For building the computer we were required to build computer chips like ALU, CPU, RAM etc..
The computer we built can run machine code.
We built a compiler for a high-level programming language called Jack.
It is built in a way that you can write your own Jack code on your computer and then compile your code using
our compiler and get machine code, you can then take the machine code and run it on our computer.
The compiler firstly translates your code to VM code then it takes that VM code and then translating it to Assembly
and after that it translates it to machine code.

Jack code (high-level programming language) ->
VM code (Stack-oriented programming language) ->
Assembly code (low-level programming language) ->
Machine code.

For example, in project 9 we built a pong game using Jack language.
Using the Jack compiler, you can compile the code and get a machine code file of the game, and
then you can run the machine code on the computer we built using the relevant simulators from
the course's website.
