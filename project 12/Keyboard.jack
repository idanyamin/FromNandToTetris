class Keyboard{
	static Array keyboard;

	/* init keyboard */
	function void init(){
		let keyboard = 24576; // key board is at address 24576
		return;
	}

	/* returns the character of the currently pressed key on the
	keyboard; if no key is currently pressed, returns 0. */

	function char keyPressed(){
		return keyboard[0];
	}

	/* waits until a key is pressed on the keyboard and released, then
	echoes the key to the screen and returns the character of the pressed key. 
	*/
	function char readChar(){
		var char key;
		// waits for the user to press a button
		while (Keyboard.keyPressed() = 0){}
		let key = Keyboard.keyPressed();
		// waits until the user will stop press the button
		while (~(Keyboard.keyPressed() = 0)){}
		do Output.printChar(key);
		return key;
	}

	/*
	prints the message on the screen, reads the
	line (text until a newline character is detected) from the keyboard, echoes the line to the
	screen, and returns its value. This function also handles user backspaces. 
	*/
	function String readLine(String message){
		var char character;
		var String line;

		let line = String.new(64); // maximum number of char per line
		do Output.printString(message);

		let character = Keyboard.readChar();
		while (~(character = String.newLine())){
			if (character = String.backSpace()){
				do line.eraseLastChar();
			}
			else{
				do line.appendChar(character);
			}
			let character = Keyboard.readChar();
		}
		return line;
	}

	/* prints the message on the screen, reads the line
	(text until a newline character is detected) from the keyboard, echoes the line to the
	screen, and returns its integer value (until the first non-digit character in the line is
	detected). This function also handles user backspaces.*/

	function int readInt(String message){
		var String line;
		let line = Keyboard.readLine(message);
		return line.intValue();
	}
}