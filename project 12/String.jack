class String {

    field Array str;
    field int length;
    field int max_length;

    constructor String new(int maxLength) {
	/**  constructs a new empty string (of length zero) that
	* can contain at most maxLength characters. */
        if(maxLength = 0){
               let maxLength = 1;
            }
         let str = Array.new(maxLength);
         let length = 0;
         let max_length = maxLength;
         return this;
    }

    method void dispose() {
	/**  disposes this string. */
        do str.dispose();
        let length = 0;
        let max_length = 0;
        return;
    }

    method int length() {
	/**  returns the length of this string. */
        return length;
    }

    method char charAt(int j) {
	/**  returns the character at location j of this string.*/
        return str[j];
    }

    method void setCharAt(int j, char c){
	/** sets the j-th element of this string to c. */
        let str[j] = c;
        return;
    }

    method String appendChar(char c) {
    /** appends c to this string and returns this string. */
        if (length < max_length) {
            let str[length] = c;
            let length = length + 1;
        }
        return this;
    }

    method void eraseLastChar() {
	/** erases the last character from this string. */
        let length = length - 1;
        return;
    }

    method int intValue() {
	/**  returns the integer value of this string (or the string prefix until a
	* non-digit character is detected). */
        var int sum, i, times, final;
        if (str[0] = 45) {
            let final = 1;
        }
        else {
            let final = 0;
        }
        let i = length - 1;
        let sum = 0;
        let times = 1;
        while (~(i < final)) {
            let sum = sum + ((str[i] - 48) * times);
            let times = times * 10;
            let i = i - 1;
        }
        if (final > 0) {
            return -sum;
        }
        return sum;
    }

    method void setInt(int j) {
	/**  sets this string to hold a representation of j. */
        var int size, char_int, temp;
        var String int_str, new_str;
        var Array arr;
        if (j < 0) {
            let size = String.getDigitsNum(-j);

            let int_str = String.new(size);
            do setInt(-j);
            let length = size + 1;
            let max_length = size + 1;
            let arr = Array.new(size + 1);
            let temp = size;
            while (temp > 0) {
                let arr[temp] = str[temp - 1];
                let temp = temp - 1;
            }
            do int_str.dispose();
            let arr[0] = 45;
            let str = arr;
            return;
        }
        let size = String.getDigitsNum(j);
        let int_str = String.new(size);
        let new_str = String.new(size);
        let length = size;
        let temp = size - 1;
        while (j > 0) {
            let char_int = j - ((j / 10) * 10) + 48;
            let int_str = int_str.appendChar(char_int);
            let temp = temp - 1;
            let j = j / 10;
        }
        let size = size - 1;
        while (~(size < 0)) {
            let new_str = new_str.appendChar(int_str.charAt(size));
            let size = size - 1;
        }
        do str.dispose();
        let str = new_str.getArray();
        return;
    }

    method Array getArray() {
        return str;
    }

    function int getDigitsNum(int j) {
        var int counter;
        let counter = 0;
        while (j > 0) {
            let counter = counter + 1;
            let j = j / 10;
        }
        return counter;
    }

    function char backSpace() {
	/**  returns the backspace character. */
        return 129;
    }

    function char doubleQuote() {
	/**  returns the double quote (“) character. */
        return 34;
    }

    function char newLine() {
	/**  returns the newline character. */
        return 128;
    }
}